version: '3.8'

services:
  traefik:
    image: traefik:v2.9  # Используем актуальную версию Traefik
    command:
      - "--api.insecure=true"  # Включает панель Traefik для мониторинга (опционально, для локальной разработки)
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"  # Входной порт для HTTP
    ports:
      - "80:80"  # Основной HTTP порт для входящих запросов
      - "8080:8080"  # Панель мониторинга (опционально)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Для интеграции с Docker

  auth-service:
    build:
      context: .
      dockerfile: cmd/auth-service/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=Host(`auth.localhost`)"  # Правило маршрутизации на основе доменного имени
      - "traefik.http.services.auth-service.loadbalancer.server.port=8080"  # Внутренний порт сервиса
    depends_on:
      - auth-db
    volumes:
      - ./private_key.pem:/app/private_key.pem  # Монтирование private_key.pem
      - ./pkg/config/config.yaml:/app/config/config.yaml  # Монтирование config.yaml
    restart: on-failure

  auth-db:
    image: postgres:latest
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"  # Публикация порта базы данных
    volumes:
      - auth-db-data:/var/lib/postgresql/data  # Сохранение данных базы
      - ./scripts/init-auth-db.sql:/docker-entrypoint-initdb.d/init-auth-db.sql

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8079:8080"  # Используйте порт 8079 на хосте и 8080 в контейнере Swagger UI
    environment:
      - SWAGGER_JSON=/mnt/auth-service.yaml
    volumes:
      - ./api/auth-service.yaml:/mnt/auth-service.yaml  # Убедитесь, что путь к файлу совпадает

volumes:
  auth-db-data:
    driver: local